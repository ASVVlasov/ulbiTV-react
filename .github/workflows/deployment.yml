name: Build & Deploy
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, edited]
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Cache NPM
        uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Restore cache of NPM dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint application
        run: |
          npm run eslint
          npm run stylelint
  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Restore cache of NPM dependencies
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test application
        run: |
          npm run test:unit
  build:
    needs: [test, lint]
    continue-on-error: true
    strategy:
      matrix:
        node-version: [18]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore cache of NPM dependencies
        uses: actions/cache/restore@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: |
          npm run build:prod
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: build
          name: bundle
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: bundle

